{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?640d","webpack:///src/App.vue","webpack:///./src/App.vue?5b92","webpack:///./src/App.vue","webpack:///./src/router/index.js","webpack:///./src/store/common.js","webpack:///./src/store/Datas/classes.js","webpack:///./src/store/Datas/categoryes.js","webpack:///./src/store/SkeletonBuilder/index-new.js","webpack:///./src/store/BaseBuilder/index-new.js","webpack:///./src/store/PartBuilder/index-new.js","webpack:///./src/store/ProductBuilder/index-new.js","webpack:///./src/store/Helpers/_Point.js","webpack:///./src/store/PointConfigurator/index-new.js","webpack:///./src/store/AdminKitBuilder/index.js","webpack:///./src/store/index.js","webpack:///./src/plugins/vuetify.js","webpack:///./src/main.js","webpack:///./src/views/ProductBuilder.vue?e353","webpack:///src/views/ProductBuilder.vue","webpack:///./src/views/ProductBuilder.vue?4a47","webpack:///./src/views/ProductBuilder.vue"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","staticStyle","attrs","staticRenderFns","components","ProductBuilder","updated","component","VApp","VContainer","Vue","use","VueRouter","routes","path","children","router","state","loading","mutations","setLoading","payload","setError","clearError","actions","commit","claerError","getters","all_classes","Axios","post","response","resp_data","notify","group","text","status","all_categoryes","load_all_categoryes","paylaod","log","sb_all_skeletons_data","sb_skeleton_data_by_id","sb_create_skeleton","sb_delete_skeleton","sb_update_skeleton","sb_clear_all_data","sb_load_all_skeletons","sb_load_skeleton_data_by_id","parseInt","id","all_skeletons_data","form_data","FormData","append","skeleton_by_id_data","weight","image_front","image_back","headers","bb_all_bases","bb_base_by_id","bb_update_base","bb_base_relations","bb_all_attached","bb_load_base_relations_status","bb_get_all_base_builder_attach_by_base_id","bb_clear_all_data","bb_load_all_bases","bb_load_base_by_id","bb_create_base","bb_delete_base","bb_load_base_relations","bb_save_base_builder_attach","skeleton_id","category","description","data_list","skeleton_data","skeletons_points","list_skeleton_point_id_and_their_classes_ids","classes_list","list_of_classes_ids_used_for_skeleton","list_data_of_used_classes_for_skeleton","all_parts_data","list_parts_points","list_parent_part_point_id_and_their_classes_ids","list_data_of_used_classes_for_part","form_data_skeleton","response_skeleton_by_id","form_data_skeleton_points","response_skeleton_points_by_id","response_all_parts","lsit_parts_id","list_parts_points_form_data","JSON","stringify","class","point_id","class_id","resp_classes_list","includes","list_of_classes_ids_used_for_part","list","skeleton_point_id","part_id","part_point_id","parent_part_point_id","pb_all_parts_data","pb_part_data_by_id","pb_create_part","pb_delete_part","pb_update_part","pb_clear_all_data","pb_load_all_parts","pb_load_part_data_by_id","part_by_id_data","prb_all_products_data","prb_product_data_by_id","prb_create_product","prb_delete_product","prb_update_product","prb_clear_all_data","prb_load_all_products","prb_load_product_data_by_id","all_products_data","product_by_id_data","Array","isArray","Point","hint","pos","x","pos_x","y","pos_y","side","skeletonId","partId","productId","product_id","pc_points","pc_clear_all_data","pc_load_points_by_id_and_related","pc_create_point","pc_delete_point","pc_update_point","related","of","relatedPoint","akb_all_kits","akb_load_kit_by_id","akb_create_kit","akb_update_kit","akb_load_kit_relation","akb_load_kit_relation_all_loaded","akb_save_kit_products","akb_load_kit_products","akb_load_kit_products_loaded","akb_load_all_kits","akb_delete_kit_by_id","akb_drop_all_data","skeleton_points_data","products_data","products_points_data","skeleton_points_classes_list","products_points_classes_list","duplicate_list_classes_skeleton_and_products","merge_classes_skeleton_and_products","response_all_products","list_products_id","products_points_data_form_data","from","Set","concat","parent_product_point_id","parent_skeleton_point_id","Vuex","Store","common","skeletonBuilder","classesOfAncherpoint","categoryes","point","baseBuilder","partBuilder","productBuilder","adminKitBuilder","Vuetify","Vuelidate","Notifications","$http","axios","config","productionTip","store","vuetify","render","h","App","$mount","VContent"],"mappings":"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","file":"js/app.c7e9d255.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-19ca97a1\":\"a27491c7\",\"chunk-2d2091cd\":\"65e8e4bf\",\"chunk-5c689057\":\"d38accec\",\"chunk-6142c3c3\":\"94c8e58e\",\"chunk-76b925a5\":\"061d294d\",\"chunk-2d22231e\":\"51246b5d\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-19ca97a1\":1,\"chunk-5c689057\":1,\"chunk-6142c3c3\":1,\"chunk-76b925a5\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-19ca97a1\":\"f8eae797\",\"chunk-2d2091cd\":\"31d6cfe0\",\"chunk-5c689057\":\"9a2a678c\",\"chunk-6142c3c3\":\"4b105d19\",\"chunk-76b925a5\":\"f3dca111\",\"chunk-2d22231e\":\"31d6cfe0\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',{staticStyle:{\"max-width\":\"1170px\",\"margin\":\"auto\"}},[_c('v-container',[_c('ProductBuilder')],1),_c('notifications',{attrs:{\"group\":\"foo\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-app style=\"max-width: 1170px; margin: auto;\">\n     <v-container>\n      <ProductBuilder></ProductBuilder>\n    </v-container>\n\n    <notifications group=\"foo\" />\n  </v-app>\n</template>\n\n<script>\nimport ProductBuilder from '@/views/ProductBuilder'\nexport default {\n  components: {\n    ProductBuilder\n  },\n  data(){\n    return { }\n  },\n  updated(){\n  }\n};\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=59e07e03&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VApp,VContainer})\n","import Vue from 'vue'\nimport VueRouter from 'vue-router'\n\nVue.use(VueRouter)\n\nconst routes = [{\n        path: '/',\n        name: 'ProductBuilder',\n        component: () =>\n            import ('../views/ProductBuilder.vue'),\n        children: [{\n                name: 'ProductBuilderIndex',\n                path: '/',\n                component: () =>\n                    import ('../components/ProductBuilder/Index.vue'),\n            }, {\n                name: 'ProductBuilderUpdate',\n                path: 'update/:id',\n                component: () =>\n                    import ('../components/ProductBuilder/Update.vue'),\n            },\n            {\n                name: 'ProductBuilderCreate',\n                path: 'create',\n                component: () =>\n                    import ('../components/ProductBuilder/Create.vue'),\n            },\n            {\n                name: 'Test',\n                path: 'test',\n                component: () =>\n                    import ('../components/ProductBuilder/Test.vue'),\n            }\n        ]\n\n    },\n\n]\n\nconst router = new VueRouter({\n    routes\n})\n\n\nexport default router","export default {\r\n    state: {\r\n        loading: false,\r\n        error: null\r\n    },\r\n    mutations: {\r\n        setLoading(state, payload) {\r\n            state.loading = payload\r\n        },\r\n        setError(state, payload) {\r\n            state.error = payload\r\n        },\r\n        clearError(state) {\r\n            state.error = null\r\n        }\r\n    },\r\n    actions: {\r\n        setLoading({ commit }, payload) {\r\n            commit('setLoading', payload)\r\n        },\r\n        setError({ commit }, payload) {\r\n            commit('setError', payload)\r\n        },\r\n        claerError({ commit }) {\r\n            commit('clearError')\r\n        }\r\n    },\r\n    getters: {\r\n        loading(state) {\r\n            return state.loading\r\n        },\r\n        error(state) {\r\n            return state.error\r\n        }\r\n    }\r\n}","import Axios from 'axios'\r\nimport Vue from 'vue'\r\nexport default {\r\n    state: {\r\n        all_classes: []\r\n    },\r\n    mutations: {\r\n        all_classes(state, payload) {\r\n            state.all_classes = payload\r\n        }\r\n    },\r\n    actions: {\r\n        async all_classes({ commit }) {\r\n            try {\r\n                const response = await Axios.post(\"http://ivan-tactical.conf/classes/get_all.php\")\r\n                const resp_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('all_classes', resp_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        all_classes(state) {\r\n            return state.all_classes\r\n        },\r\n    }\r\n}","import Axios from 'axios'\r\nimport Vue from 'vue'\r\nexport default {\r\n    state: {\r\n        all_categoryes: []\r\n    },\r\n    mutations: {\r\n        load_all_categoryes(state, paylaod) {\r\n            state.all_categoryes = paylaod\r\n        }\r\n    },\r\n    actions: {\r\n        async load_all_categoryes({ commit }) {\r\n            try {\r\n                const response = await Axios.post(\"http://ivan-tactical.conf/categoryes/get.php\")\r\n                const resp_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('load_all_categoryes', resp_data.data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        all_categoryes(state) {\r\n            return state.all_categoryes\r\n        }\r\n    }\r\n}","import Axios from 'axios'\r\nimport Vue from 'vue'\r\n\r\nexport default {\r\n    state: {\r\n        sb_all_skeletons_data: [],\r\n        sb_skeleton_data_by_id: [],\r\n        sb_create_skeleton: [],\r\n        sb_delete_skeleton: [],\r\n        sb_update_skeleton: []\r\n    },\r\n    mutations: {\r\n        sb_clear_all_data(state) {\r\n            state.sb_all_skeletons_data = []\r\n            state.sb_skeleton_data_by_id = []\r\n            state.sb_create_skeleton = []\r\n            state.sb_delete_skeleton = []\r\n            state.sb_update_skeleton = []\r\n        },\r\n        sb_load_all_skeletons(state, payload) {\r\n            state.sb_all_skeletons_data = payload;\r\n        },\r\n        sb_load_skeleton_data_by_id(state, payload) {\r\n            state.sb_skeleton_data_by_id = payload;\r\n        },\r\n        sb_create_skeleton(state, payload) {\r\n            state.sb_create_skeleton = payload;\r\n        },\r\n        sb_delete_skeleton(state, payload) {\r\n            state.sb_delete_skeleton = payload.data;\r\n\r\n            for (let i = 0; i < state.sb_all_skeletons_data.data.length; i++) {\r\n                if (parseInt(state.sb_all_skeletons_data.data[i].id) === parseInt(payload.id)) {\r\n                    state.sb_all_skeletons_data.data.splice(i, 1)\r\n                }\r\n            }\r\n        },\r\n        sb_update_skeleton(state, payload) {\r\n            state.sb_update_skeleton = payload;\r\n        }\r\n    },\r\n    actions: {\r\n        sb_clear_all_data({ commit }) {\r\n            try {\r\n                commit('sb_clear_all_data')\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Получаем все скелеты\r\n        async sb_load_all_skeletons({ commit }) {\r\n            try {\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/skeleton/get_all.php\"\r\n                );\r\n                let all_skeletons_data = response.data\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: all_skeletons_data.message,\r\n                    type: all_skeletons_data.status\r\n                })\r\n\r\n                commit('sb_load_all_skeletons', all_skeletons_data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Получаем скелеты по параметру id\r\n        async sb_load_skeleton_data_by_id({ commit }, id) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"id\", parseInt(id));\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/skeleton/get_by_id.php\",\r\n                    form_data\r\n                );\r\n                let skeleton_by_id_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: skeleton_by_id_data.message,\r\n                    type: skeleton_by_id_data.status\r\n                })\r\n\r\n                commit('sb_load_skeleton_data_by_id', skeleton_by_id_data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Создаем скелет\r\n        async sb_create_skeleton({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"name\", payload.name);\r\n                form_data.append(\"weight\", parseInt(payload.weight));\r\n                form_data.append(\"image_front\", payload.image_front);\r\n                form_data.append(\"image_back\", payload.image_back);\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/skeleton/create.php\",\r\n                    form_data, {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\"\r\n                        }\r\n                    }\r\n                );\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: response.data.message,\r\n                    type: response.data.status\r\n                })\r\n\r\n                commit('sb_create_skeleton', response.data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Удаляем скелет по параметру id\r\n        async sb_delete_skeleton({ commit }, id) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"id\", parseInt(id));\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/skeleton/delete.php\",\r\n                    form_data\r\n                )\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: response.data.message,\r\n                    type: response.data.status\r\n                })\r\n\r\n                commit('sb_delete_skeleton', { data: response.data, id: parseInt(id) })\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Обновляем данные скелета\r\n        async sb_update_skeleton({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"id\", parseInt(payload.id));\r\n                form_data.append(\"name\", payload.name);\r\n                form_data.append(\"weight\", parseInt(payload.weight));\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/skeleton/update.php\",\r\n                    form_data\r\n                )\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: response.data.message,\r\n                    type: response.data.status\r\n                })\r\n\r\n                commit('sb_update_skeleton', payload)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        sb_all_skeletons_data(state) {\r\n            return state.sb_all_skeletons_data;\r\n        },\r\n        sb_skeleton_data_by_id(state) {\r\n            return state.sb_skeleton_data_by_id;\r\n        },\r\n        sb_create_skeleton(state) {\r\n            return state.sb_create_skeleton;\r\n        },\r\n        sb_delete_skeleton(state) {\r\n            return state.sb_delete_skeleton;\r\n        },\r\n        sb_update_skeleton(state) {\r\n            return state.sb_update_skeleton;\r\n        }\r\n    }\r\n}","import Axios from \"axios\"\r\nimport Vue from 'vue'\r\n\r\n// import Axios from 'axios'\r\nexport default {\r\n    state: {\r\n        bb_all_bases: [],\r\n        bb_base_by_id: [],\r\n        bb_update_base: [],\r\n        bb_base_relations: [],\r\n        bb_all_attached: [],\r\n        bb_load_base_relations_status: false,\r\n        bb_get_all_base_builder_attach_by_base_id: []\r\n    },\r\n    mutations: {\r\n        bb_clear_all_data(state) {\r\n            state.bb_all_bases = []\r\n            state.bb_base_by_id = []\r\n            state.bb_update_base = []\r\n            state.bb_base_relations = []\r\n            state.bb_all_attached = []\r\n            state.bb_load_base_relations_status = false\r\n            state.bb_get_all_base_builder_attach_by_base_id = []\r\n        },\r\n        bb_load_all_bases(state, payload) {\r\n            state.bb_all_bases = payload\r\n        },\r\n        bb_load_base_by_id(state, payload) {\r\n            state.bb_base_by_id = payload\r\n        },\r\n        bb_create_base(state, payload) {\r\n            state.bb_base_by_id = payload\r\n        },\r\n        bb_update_base(state, payload) {\r\n            state.bb_update_base = payload\r\n        },\r\n        bb_delete_base(state, payload) {\r\n            for (let i = 0; i < state.bb_all_bases.length; i++) {\r\n                if (parseInt(state.bb_all_bases[i].id) === parseInt(payload)) {\r\n                    state.bb_all_bases.splice(i, 1)\r\n                }\r\n            }\r\n        },\r\n        bb_load_base_relations(state, payload) {\r\n            state.bb_base_relations = payload\r\n        },\r\n        bb_save_base_builder_attach(state, payload) {\r\n            state.bb_all_attached = payload\r\n        },\r\n        bb_load_base_relations_status(state, payload) {\r\n            state.bb_load_base_relations_status = payload\r\n        },\r\n        bb_get_all_base_builder_attach_by_base_id(state, payload) {\r\n            state.bb_get_all_base_builder_attach_by_base_id = payload\r\n        }\r\n    },\r\n    actions: {\r\n        bb_clear_all_data({ commit }) {\r\n            try {\r\n                commit('bb_clear_all_data')\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async bb_load_all_bases({ commit }) {\r\n            try {\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/base/get_all.php\"\r\n                )\r\n                let resp_data = response.data\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('bb_load_all_bases', resp_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async bb_load_base_by_id({ commit }, id) {\r\n            try {\r\n                let form_data = new FormData()\r\n                form_data.append('id', parseInt(id))\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/base/get_by_id.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('bb_load_base_by_id', resp_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async bb_create_base({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append('name', payload.name)\r\n                form_data.append('skeleton_id', parseInt(payload.skeleton_id))\r\n                form_data.append('category', payload.category)\r\n                form_data.append('description', payload.description)\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/base/create.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('bb_create_base', resp_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async bb_update_base({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append('name', payload.data.name)\r\n                form_data.append('skeleton_id', parseInt(payload.data.skeleton_id))\r\n                form_data.append('category', payload.data.category)\r\n                form_data.append('description', payload.data.description)\r\n                form_data.append('id', parseInt(payload.id))\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/base/update.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n\r\n                commit('bb_update_base', resp_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async bb_delete_base({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData()\r\n                form_data.append('id', parseInt(payload))\r\n                let response = await Axios.post(\r\n                    'http://ivan-tactical.conf/base/delete.php',\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n\r\n                commit('bb_delete_base', parseInt(payload))\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async bb_load_base_relations({ commit }, payload) { //payload (int) [skeleton_id]\r\n            try {\r\n                // создаем коннечный массив данных\r\n                let data_list = {\r\n                    skeleton_data: [],\r\n                    skeletons_points: [],\r\n                    list_skeleton_point_id_and_their_classes_ids: [],\r\n                    classes_list: [],\r\n                    list_of_classes_ids_used_for_skeleton: [],\r\n                    list_data_of_used_classes_for_skeleton: [],\r\n                    all_parts_data: [],\r\n                    list_parts_points: [],\r\n                    list_parent_part_point_id_and_their_classes_ids: [],\r\n                    list_data_of_used_classes_for_part: []\r\n                }\r\n\r\n                // получаем данные скелетона по id\r\n                let form_data_skeleton = new FormData()\r\n                form_data_skeleton.append('id', parseInt(payload))\r\n                let response_skeleton_by_id = await Axios.post(\r\n                    \"http://ivan-tactical.conf/skeleton/get_by_id.php\",\r\n                    form_data_skeleton\r\n                )\r\n                \r\n                data_list.skeleton_data = response_skeleton_by_id.data.data[0]\r\n\r\n                // получаем точки выбраного скелетона\r\n                let form_data_skeleton_points = new FormData()\r\n                form_data_skeleton_points.append('id', parseInt(payload))\r\n                let response_skeleton_points_by_id = await Axios.post(\r\n                    \"http://ivan-tactical.conf/skeletons_points/get.php\",\r\n                    form_data_skeleton_points\r\n                )\r\n                data_list.skeletons_points = response_skeleton_points_by_id.data.data\r\n\r\n                // получаем данные всех партов (обвесы второго типа)\r\n                let response_all_parts = await Axios.post(\r\n                    \"http://ivan-tactical.conf/part/get_all.php\"\r\n                );\r\n                data_list.all_parts_data = response_all_parts.data.data\r\n\r\n                // Полчучаем список id партов\r\n                let lsit_parts_id = []\r\n                for (let i = 0; i < data_list.all_parts_data.length; i++) {\r\n                    lsit_parts_id.push(parseInt(data_list.all_parts_data[i].id))\r\n                }\r\n\r\n                // Получаем данные точек партов выше передавая список id партов\r\n                let list_parts_points_form_data = new FormData()\r\n                list_parts_points_form_data.append('ids', JSON.stringify(lsit_parts_id))\r\n                let list_parts_points = await Axios.post(\r\n                    'http://ivan-tactical.conf/parts_points/get_by_list_ids.php',\r\n                    list_parts_points_form_data\r\n                )\r\n                data_list.list_parts_points = list_parts_points.data.data\r\n                    // console.log(data_list.all_parts_data, data_list.list_parts_points)\r\n\r\n                // собираем список id точек и id классов этих точек (скелетов)\r\n                let list_skeleton_point_id_and_their_classes_ids = [];\r\n                for (let i = 0; i < data_list.skeletons_points.length; i++) {\r\n                    for (let j = 0; j < data_list.skeletons_points[i].class.length; j++) {\r\n                        if (data_list.skeletons_points[i].type === 'Plus') {\r\n                            list_skeleton_point_id_and_their_classes_ids.push({\r\n                                point_id: parseInt(data_list.skeletons_points[i].id),\r\n                                class_id: data_list.skeletons_points[i].class[j]\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n                data_list.list_skeleton_point_id_and_their_classes_ids = list_skeleton_point_id_and_their_classes_ids\r\n\r\n\r\n                // получаем список классов\r\n                const classes_list = await Axios.post(\"http://ivan-tactical.conf/classes/get_all.php\")\r\n                const resp_classes_list = classes_list.data.data\r\n                data_list.classes_list = resp_classes_list\r\n\r\n                //  списоке id классов которые используються на скелете\r\n                let list_of_classes_ids_used_for_skeleton = []\r\n                for (let i = 0; i < list_skeleton_point_id_and_their_classes_ids.length; i++) {\r\n                    if (!list_of_classes_ids_used_for_skeleton.includes(list_skeleton_point_id_and_their_classes_ids[i].class_id)) {\r\n                        list_of_classes_ids_used_for_skeleton.push(list_skeleton_point_id_and_their_classes_ids[i].class_id)\r\n                    }\r\n                }\r\n                data_list.list_of_classes_ids_used_for_skeleton = list_of_classes_ids_used_for_skeleton\r\n\r\n                // список данных классов которые используються на скелете\r\n                let list_data_of_used_classes_for_skeleton = []\r\n                for (let i = 0; i < list_of_classes_ids_used_for_skeleton.length; i++) {\r\n                    for (let j = 0; j < resp_classes_list.length; j++) {\r\n                        if (list_of_classes_ids_used_for_skeleton[i] === resp_classes_list[j].id) {\r\n                            list_data_of_used_classes_for_skeleton.push(resp_classes_list[j])\r\n                        }\r\n                    }\r\n                }\r\n                data_list.list_data_of_used_classes_for_skeleton = list_data_of_used_classes_for_skeleton\r\n\r\n                // собираем список id точек и id классов этих точек (обвесов)\r\n                let list_parent_part_point_id_and_their_classes_ids = []\r\n                for (let i = 0; i < data_list.list_parts_points.length; i++) {\r\n                    for (let j = 0; j < data_list.list_parts_points[i].class.length; j++) {\r\n                        if (data_list.list_parts_points[i].type === 'Plus') {\r\n                            list_parent_part_point_id_and_their_classes_ids.push({\r\n                                point_id: parseInt(data_list.list_parts_points[i].id),\r\n                                class_id: data_list.list_parts_points[i].class[j]\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n                data_list.list_parent_part_point_id_and_their_classes_ids = list_parent_part_point_id_and_their_classes_ids\r\n\r\n                //  списоке id классов которые используються на обвесах\r\n                let list_of_classes_ids_used_for_part = []\r\n                for (let i = 0; i < list_parent_part_point_id_and_their_classes_ids.length; i++) {\r\n                    if (!list_of_classes_ids_used_for_part.includes(list_parent_part_point_id_and_their_classes_ids[i].class_id)) {\r\n                        list_of_classes_ids_used_for_part.push(list_parent_part_point_id_and_their_classes_ids[i].class_id)\r\n                    }\r\n                }\r\n                data_list.list_of_classes_ids_used_for_part = list_of_classes_ids_used_for_part\r\n\r\n                // список данных классов которые используються на обвесах скелета\r\n                let list_data_of_used_classes_for_part = []\r\n                for (let i = 0; i < list_of_classes_ids_used_for_part.length; i++) {\r\n                    for (let j = 0; j < resp_classes_list.length; j++) {\r\n                        if (list_of_classes_ids_used_for_part[i] === resp_classes_list[j].id) {\r\n                            list_data_of_used_classes_for_part.push(resp_classes_list[j])\r\n                        }\r\n                    }\r\n                }\r\n                data_list.list_data_of_used_classes_for_part = list_data_of_used_classes_for_part\r\n\r\n                console.log(data_list)\r\n                commit('bb_load_base_relations', data_list)\r\n                commit('bb_load_base_relations_status', true)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async bb_save_base_builder_attach({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData()\r\n                form_data.append('attachments', JSON.stringify(payload))\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/base/attach.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n\r\n\r\n\r\n                commit('bb_save_base_builder_attach', resp_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async bb_get_all_base_builder_attach_by_base_id({ commit }, payload) { // payload (int) [base_id]\r\n            try {\r\n                let form_data = new FormData()\r\n                form_data.append('id', parseInt(payload))\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/base/attach_get.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                let list = []\r\n                for (let i in resp_data.data) {\r\n                    if (resp_data.data[i].skeleton_point_id === 0) {\r\n                        list.push({\r\n                            part_id: parseInt(resp_data.data[i].part_id),\r\n                            part_point_id: parseInt(resp_data.data[i].part_point_id),\r\n                            parent_part_point_id: parseInt(resp_data.data[i].parent_part_point_id)\r\n                        })\r\n                    } else if (resp_data.data[i].parent_part_point_id === 0) {\r\n                        list.push({\r\n                            part_id: parseInt(resp_data.data[i].part_id),\r\n                            part_point_id: parseInt(resp_data.data[i].part_point_id),\r\n                            skeleton_point_id: parseInt(resp_data.data[i].skeleton_point_id)\r\n                        })\r\n                    }\r\n                }\r\n                commit('bb_get_all_base_builder_attach_by_base_id', list)\r\n            } catch (error) {\r\n                console.err(error)\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        bb_all_bases(state) {\r\n            return state.bb_all_bases\r\n        },\r\n        bb_base_by_id(state) {\r\n            return state.bb_base_by_id\r\n        },\r\n        bb_base_relations(state) {\r\n            return state.bb_base_relations\r\n        },\r\n        bb_load_base_relations_status(state) {\r\n            return state.bb_load_base_relations_status\r\n        },\r\n        bb_get_all_base_builder_attach_by_base_id(state) {\r\n            return state.bb_get_all_base_builder_attach_by_base_id\r\n        }\r\n    }\r\n}","import Axios from 'axios'\r\nimport Vue from 'vue'\r\n\r\nexport default {\r\n    state: {\r\n        pb_all_parts_data: [],\r\n        pb_part_data_by_id: [],\r\n        pb_create_part: [],\r\n        pb_delete_part: [],\r\n        pb_update_part: []\r\n    },\r\n    mutations: {\r\n        pb_clear_all_data(state) {\r\n            state.pb_all_parts_data = []\r\n            state.pb_part_data_by_id = []\r\n            state.pb_create_part = []\r\n            state.pb_delete_part = []\r\n            state.pb_update_part = []\r\n        },\r\n        pb_load_all_parts(state, payload) {\r\n            state.pb_all_parts_data = payload;\r\n        },\r\n        pb_load_part_data_by_id(state, payload) {\r\n            state.pb_part_data_by_id = payload;\r\n        },\r\n        pb_create_part(state, payload) {\r\n            state.pb_create_part = payload;\r\n        },\r\n        pb_delete_part(state, payload) {\r\n            state.pb_delete_part = payload.data;\r\n\r\n            for (let i = 0; i < state.pb_all_parts_data.data.length; i++) {\r\n                if (parseInt(state.pb_all_parts_data.data[i].id) === parseInt(payload.id)) {\r\n                    state.pb_all_parts_data.data.splice(i, 1)\r\n                }\r\n            }\r\n        },\r\n        pb_update_part(state, payload) {\r\n            state.pb_update_part = payload;\r\n        }\r\n    },\r\n    actions: {\r\n        pb_clear_all_data({ commit }) {\r\n            try {\r\n                commit('pb_clear_all_data')\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Получаем все скелеты\r\n        async pb_load_all_parts({ commit }) {\r\n            try {\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/part/get_all.php\"\r\n                );\r\n                let all_parts_data = response.data\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: all_parts_data.message,\r\n                    type: all_parts_data.status\r\n                })\r\n\r\n                commit('pb_load_all_parts', all_parts_data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Получаем скелеты по параметру id\r\n        async pb_load_part_data_by_id({ commit }, id) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"id\", parseInt(id));\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/part/get_by_id.php\",\r\n                    form_data\r\n                );\r\n                let part_by_id_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: part_by_id_data.message,\r\n                    type: part_by_id_data.status\r\n                })\r\n\r\n                commit('pb_load_part_data_by_id', part_by_id_data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Создаем скелет\r\n        async pb_create_part({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"name\", payload.name);\r\n                form_data.append(\"image_front\", payload.image_front);\r\n                form_data.append(\"image_back\", payload.image_back);\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/part/create.php\",\r\n                    form_data, {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\"\r\n                        }\r\n                    }\r\n                );\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: response.data.message,\r\n                    type: response.data.status\r\n                })\r\n\r\n                commit('pb_create_part', response.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Удаляем скелет по параметру id\r\n        async pb_delete_part({ commit }, id) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"id\", parseInt(id));\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/part/delete.php\",\r\n                    form_data\r\n                )\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: response.data.message,\r\n                    type: response.data.status\r\n                })\r\n\r\n                commit('pb_delete_part', { data: response.data, id: parseInt(id) })\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Обновляем данные скелета\r\n        async pb_update_part({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"id\", parseInt(payload.id));\r\n                form_data.append(\"name\", payload.name);\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/part/update.php\",\r\n                    form_data\r\n                )\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: response.data.message,\r\n                    type: response.data.status\r\n                })\r\n\r\n                commit('pb_update_part', payload)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        pb_all_parts_data(state) {\r\n            return state.pb_all_parts_data;\r\n        },\r\n        pb_part_data_by_id(state) {\r\n            return state.pb_part_data_by_id;\r\n        },\r\n        pb_create_part(state) {\r\n            return state.pb_create_part;\r\n        },\r\n        pb_delete_part(state) {\r\n            return state.pb_delete_part;\r\n        },\r\n        pb_update_part(state) {\r\n            return state.pb_update_part;\r\n        }\r\n    }\r\n}","import Axios from 'axios'\r\nimport Vue from 'vue'\r\nimport router from '@/router'\r\n\r\nexport default {\r\n    state: {\r\n        prb_all_products_data: [],\r\n        prb_product_data_by_id: [],\r\n        prb_create_product: [],\r\n        prb_delete_product: [],\r\n        prb_update_product: []\r\n    },\r\n    mutations: {\r\n        prb_clear_all_data(state) {\r\n            state.prb_all_products_data = []\r\n            state.prb_product_data_by_id = []\r\n            state.prb_create_product = []\r\n            state.prb_delete_product = []\r\n            state.prb_update_product = []\r\n        },\r\n        prb_load_all_products(state, payload) {\r\n            state.prb_all_products_data = payload;\r\n        },\r\n        prb_load_product_data_by_id(state, payload) {\r\n            state.prb_product_data_by_id = payload;\r\n        },\r\n        prb_create_product(state, payload) {\r\n            state.prb_create_product = payload;\r\n        },\r\n        prb_delete_product(state, payload) {\r\n            state.prb_delete_product = payload.data;\r\n\r\n            for (let i = 0; i < state.prb_all_products_data.data.length; i++) {\r\n                if (parseInt(state.prb_all_products_data.data[i].id) === parseInt(payload.id)) {\r\n                    state.prb_all_products_data.data.splice(i, 1)\r\n                }\r\n            }\r\n        },\r\n        prb_update_product(state, payload) {\r\n            state.prb_update_product = payload;\r\n        }\r\n    },\r\n    actions: {\r\n        prb_clear_all_data({ commit }) {\r\n            try {\r\n                commit('prb_clear_all_data')\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Получаем все скелеты\r\n        async prb_load_all_products({ commit }) {\r\n            try {\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/product/get_all.php\"\r\n                );\r\n                let all_products_data = response.data\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: all_products_data.message,\r\n                    type: all_products_data.status\r\n                })\r\n\r\n                commit('prb_load_all_products', all_products_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Получаем скелеты по параметру id\r\n        async prb_load_product_data_by_id({ commit }, id) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"id\", parseInt(id));\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/product/get_by_id.php\",\r\n                    form_data\r\n                );\r\n                let product_by_id_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: product_by_id_data.message,\r\n                    type: product_by_id_data.status\r\n                })\r\n                if (Array.isArray(product_by_id_data.data) && product_by_id_data.data.length > 0) {\r\n                    router.push(`/update/${product_by_id_data.data[0].id}`)\r\n                } else {\r\n                    router.push(`/create/`)\r\n                }\r\n                commit('prb_load_product_data_by_id', product_by_id_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Создаем скелет\r\n        async prb_create_product({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"name\", payload.name);\r\n                form_data.append(\"weight\", parseInt(payload.weight));\r\n                form_data.append(\"image_front\", payload.image_front);\r\n                form_data.append(\"image_back\", payload.image_back);\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/product/create.php\",\r\n                    form_data, {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\"\r\n                        }\r\n                    }\r\n                );\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: response.data.message,\r\n                    type: response.data.status\r\n                })\r\n\r\n                commit('prb_create_product', response.data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Удаляем скелет по параметру id\r\n        async prb_delete_product({ commit }, id) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"id\", parseInt(id));\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/product/delete.php\",\r\n                    form_data\r\n                )\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: response.data.message,\r\n                    type: response.data.status\r\n                })\r\n\r\n                commit('prb_delete_product', { data: response.data.data, id: parseInt(id) })\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        // Обновляем данные скелета\r\n        async prb_update_product({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append(\"id\", parseInt(payload.id));\r\n                form_data.append(\"name\", payload.name);\r\n                form_data.append(\"weight\", parseInt(payload.weight));\r\n\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/product/update.php\",\r\n                    form_data\r\n                )\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: response.data.message,\r\n                    type: response.data.status\r\n                })\r\n\r\n                commit('prb_update_product', payload)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        prb_all_products_data(state) {\r\n            return state.prb_all_products_data;\r\n        },\r\n        prb_product_data_by_id(state) {\r\n            return state.prb_product_data_by_id;\r\n        },\r\n        prb_create_product(state) {\r\n            return state.prb_create_product;\r\n        },\r\n        prb_delete_product(state) {\r\n            return state.prb_delete_product;\r\n        },\r\n        prb_update_product(state) {\r\n            return state.prb_update_product;\r\n        }\r\n    }\r\n}","export default class Point {\r\n    constructor(data) {\r\n        this.class = data.class\r\n        this.hint = data.hint\r\n        this.id = parseInt(data.id)\r\n        this.name = data.name\r\n        this.pos = {\r\n            x: parseInt(data.pos_x),\r\n            y: parseInt(data.pos_y)\r\n        }\r\n        this.side = data.side\r\n        this.type = data.type\r\n        this.skeletonId = data.skeleton_id ? parseInt(data.skeleton_id) : undefined\r\n        this.partId = data.part_id ? parseInt(data.part_id) : undefined\r\n        this.productId = data.product_id ? parseInt(data.product_id) : undefined\r\n    }\r\n}","import Axios from 'axios'\r\nimport Vue from 'vue'\r\nimport Point from '../Helpers/_Point.js'\r\nexport default {\r\n    state: {\r\n        pc_points: []\r\n    },\r\n    mutations: {\r\n        pc_clear_all_data(state) {\r\n            state.pc_points = []\r\n        },\r\n        pc_load_points_by_id_and_related(state, payload) {\r\n            state.pc_points = payload\r\n        },\r\n        pc_create_point(state, payload) {\r\n            state.pc_points.push(payload)\r\n        },\r\n        pc_delete_point(state, id) {\r\n            for (let i = 0; i < state.pc_points.length; i++) {\r\n                if (parseInt(state.pc_points[i].id) === parseInt(id)) {\r\n                    state.pc_points.splice(i, 1)\r\n                }\r\n            }\r\n        },\r\n        pc_update_point(state, payload) {\r\n            for (let i = 0; i < state.pc_points.length; i++) {\r\n                if (parseInt(state.pc_points[i].id) === parseInt(payload.id)) {\r\n                    for (let key in payload) {\r\n                        state.pc_points[i][key] = payload[key]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        pc_clear_all_data({ commit }) {\r\n            try {\r\n                commit('pc_clear_all_data')\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async pc_load_points_by_id_and_related({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append('id', parseInt(payload.id))\r\n                if (payload.related === 'skeleton') {\r\n                    let response = await Axios.post(\r\n                        \"http://ivan-tactical.conf/skeletons_points/get.php\",\r\n                        form_data\r\n                    )\r\n\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n                    let list = []\r\n                    for (let i = 0; i < resp_data.data.length; i++) {\r\n                        list.push(new Point(resp_data.data[i]))\r\n                    }\r\n                    commit('pc_load_points_by_id_and_related', list)\r\n                } else if (payload.related === 'part') {\r\n                    let response = await Axios.post(\r\n                        \"http://ivan-tactical.conf/parts_points/get.php\",\r\n                        form_data\r\n                    )\r\n\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n                    let list = []\r\n                    for (let i = 0; i < resp_data.data.length; i++) {\r\n                        list.push(new Point(resp_data.data[i]))\r\n                    }\r\n                    commit('pc_load_points_by_id_and_related', list)\r\n                } else if (payload.related === 'product') {\r\n                    let response = await Axios.post(\r\n                        \"http://ivan-tactical.conf/products_points/get.php\",\r\n                        form_data\r\n                    )\r\n\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n                    let list = []\r\n                    for (let i = 0; i < resp_data.data.length; i++) {\r\n                        list.push(new Point(resp_data.data[i]))\r\n                    }\r\n                    commit('pc_load_points_by_id_and_related', list)\r\n                } else {\r\n                    console.error('Error found! Unexpected related name...')\r\n                }\r\n\r\n\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async pc_create_point({ commit }, payload) {\r\n            console.log(payload.data)\r\n            try {\r\n                // создаем объект форм дата\r\n                let form_data = new FormData();\r\n                form_data.append('class', JSON.stringify(typeof payload.data.class === 'object' ? payload.data.class : Array.of(payload.data.class)))\r\n                form_data.append('hint', payload.data.hint)\r\n                form_data.append('name', payload.data.name)\r\n                form_data.append('pos_x', parseInt(payload.data.pos.x))\r\n                form_data.append('pos_y', parseInt(payload.data.pos.y))\r\n                form_data.append('side', payload.data.side)\r\n                form_data.append('type', payload.data.type)\r\n                if (payload.data.relatedPoint != null) {\r\n                    form_data.append('related_id', parseInt(payload.data.relatedPoint))\r\n                }\r\n                // создаем объект форм дата\r\n\r\n                if (payload.related === 'skeleton') {\r\n                    form_data.append('skeleton_id', parseInt(payload.data.skeletonId))\r\n                    let response = await Axios.post(\r\n                        \"http://ivan-tactical.conf/skeletons_points/create.php\",\r\n                        form_data\r\n                    )\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n                    commit('pc_create_point', new Point(resp_data.data))\r\n                } else if (payload.related === 'part') {\r\n                    form_data.append('part_id', parseInt(payload.data.partId))\r\n                    let response = await Axios.post(\r\n                        \"http://ivan-tactical.conf/parts_points/create.php\",\r\n                        form_data\r\n                    )\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n                    commit('pc_create_point', new Point(resp_data.data))\r\n                } else if (payload.related === 'product') {\r\n                    form_data.append('product_id', parseInt(payload.data.productId))\r\n                    let response = await Axios.post(\r\n                        \"http://ivan-tactical.conf/products_points/create.php\",\r\n                        form_data\r\n                    )\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n                    commit('pc_create_point', new Point(resp_data.data))\r\n                } else {\r\n                    console.error('Error found! Unexpected related name...')\r\n                }\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async pc_delete_point({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append('id', parseInt(payload.id))\r\n\r\n                if (payload.related === 'skeleton') {\r\n                    let response = await Axios.post(\r\n                        'http://ivan-tactical.conf/skeletons_points/delete.php',\r\n                        form_data\r\n                    )\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n\r\n                    commit('pc_delete_point', parseInt(payload.id))\r\n                } else if (payload.related === 'part') {\r\n                    let response = await Axios.post(\r\n                        'http://ivan-tactical.conf/parts_points/delete.php',\r\n                        form_data\r\n                    )\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n\r\n                    commit('pc_delete_point', parseInt(payload.id))\r\n                } else if (payload.related === 'product') {\r\n                    let response = await Axios.post(\r\n                        'http://ivan-tactical.conf/products_points/delete.php',\r\n                        form_data\r\n                    )\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n\r\n                    commit('pc_delete_point', parseInt(payload.id))\r\n                } else {\r\n                    console.error('Error found! Unexpected related name...')\r\n                }\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async pc_update_point({ commit }, payload) {\r\n            try {\r\n                // создаем объект форм дата\r\n                let form_data = new FormData();\r\n                form_data.append('class', JSON.stringify(typeof payload.data.class === 'object' ? payload.data.class : Array.of(payload.data.class)))\r\n                form_data.append('hint', payload.data.hint) //\r\n                form_data.append('name', payload.data.name) //\r\n                form_data.append('pos_x', parseInt(payload.data.pos.x)) //\r\n                form_data.append('pos_y', parseInt(payload.data.pos.y)) //\r\n                form_data.append('side', payload.data.side) //\r\n                form_data.append('type', payload.data.type) //\r\n                form_data.append('id', parseInt(payload.data.id))\r\n                    // создаем объект форм дата\r\n\r\n                if (payload.related === 'skeleton') {\r\n                    form_data.append('skeleton_id', parseInt(payload.data.skeletonId))\r\n                    let response = await Axios.post(\r\n                        'http://ivan-tactical.conf/skeletons_points/update.php',\r\n                        form_data\r\n                    )\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n                    commit('pc_update_point', payload.data)\r\n                } else if (payload.related === 'part') {\r\n                    form_data.append('part_id', parseInt(payload.data.partId))\r\n                    let response = await Axios.post(\r\n                        'http://ivan-tactical.conf/parts_points/update.php',\r\n                        form_data\r\n                    )\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n\r\n                    commit('pc_update_point', payload.data)\r\n                } else if (payload.related === 'product') {\r\n                    form_data.append('product_id', parseInt(payload.data.productId))\r\n                    let response = await Axios.post(\r\n                        'http://ivan-tactical.conf/products_points/update.php',\r\n                        form_data\r\n                    )\r\n                    let resp_data = response.data\r\n                    Vue.notify({\r\n                        group: 'foo',\r\n                        text: resp_data.message,\r\n                        type: resp_data.status\r\n                    })\r\n\r\n                    commit('pc_update_point', payload.data)\r\n                } else {\r\n                    console.error('Error found! Unexpected related name...')\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        pc_points(state) {\r\n            return state.pc_points\r\n        }\r\n    }\r\n}","import Axios from 'axios'\r\nimport Vue from 'vue'\r\nexport default {\r\n    state: {\r\n        akb_all_kits: [],\r\n        akb_load_kit_by_id: {},\r\n        akb_create_kit: [],\r\n        akb_update_kit: [],\r\n        akb_load_kit_relation: {},\r\n        akb_load_kit_relation_all_loaded: false,\r\n        akb_save_kit_products: false,\r\n        akb_load_kit_products: [],\r\n        akb_load_kit_products_loaded: false\r\n    },\r\n    mutations: {\r\n        akb_load_all_kits(state, payload) {\r\n            state.akb_all_kits = payload\r\n        },\r\n        akb_load_kit_by_id(state, payload) {\r\n            state.akb_load_kit_by_id = payload[0]\r\n        },\r\n        akb_delete_kit_by_id(state, payload) {\r\n            for (let i = 0; i < state.akb_all_kits.length; i++) {\r\n                if (parseInt(state.akb_all_kits[i].id) === parseInt(payload)) {\r\n                    state.akb_all_kits.splice(i, 1)\r\n                }\r\n            }\r\n        },\r\n        akb_create_kit(state, payload) {\r\n            state.akb_create_kit = payload\r\n        },\r\n        akb_update_kit(state, payload) {\r\n            state.akb_update_kit = payload\r\n        },\r\n        akb_drop_all_data(state) {\r\n            state.akb_all_kits = []\r\n            state.akb_load_kit_by_id = {}\r\n            state.akb_create_kit = []\r\n            state.akb_update_kit = []\r\n            state.akb_load_kit_relation = {}\r\n            state.akb_load_kit_relation_all_loaded = false\r\n            state.akb_save_kit_products = false\r\n            state.akb_load_kit_products = [],\r\n                state.akb_load_kit_products_loaded = false\r\n        },\r\n        akb_load_kit_relation(state, payload) {\r\n            state.akb_load_kit_relation = payload\r\n        },\r\n        akb_load_kit_relation_all_loaded(state) {\r\n            state.akb_load_kit_relation_all_loaded = true\r\n        },\r\n        akb_save_kit_products(state, payload) {\r\n            state.akb_save_kit_products = payload\r\n        },\r\n        akb_load_kit_products(state, payload) {\r\n            state.akb_load_kit_products = payload\r\n        },\r\n        akb_load_kit_products_loaded(state) {\r\n            state.akb_load_kit_products_loaded = true\r\n        }\r\n    },\r\n    actions: {\r\n        async akb_load_all_kits({ commit }) {\r\n            try {\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/admin_kit_builder/get_all.php\"\r\n                )\r\n                let resp_data = response.data\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('akb_load_all_kits', resp_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async akb_load_kit_by_id({ commit }, id) {\r\n            try {\r\n                let form_data = new FormData()\r\n                form_data.append('id', parseInt(id))\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/admin_kit_builder/get_by_id.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('akb_load_kit_by_id', resp_data.data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        },\r\n        async akb_delete_kit_by_id({ commit }, payload) { // payload (int) [kit_id]\r\n            try {\r\n                let form_data = new FormData()\r\n                form_data.append('id', parseInt(payload))\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/admin_kit_builder/delete_by_id.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('akb_delete_kit_by_id', parseInt(payload))\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async akb_create_kit({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData()\r\n                form_data.append('skeleton_id', parseInt(payload.skeleton_id))\r\n                form_data.append('category', parseInt(payload.category))\r\n                form_data.append('name', payload.name)\r\n                form_data.append('description', payload.description)\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/admin_kit_builder/create.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('akb_create_kit', resp_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async akb_update_kit({ commit }, payload) {\r\n            try {\r\n                let form_data = new FormData()\r\n                form_data.append('id', parseInt(payload.id))\r\n                form_data.append('skeleton_id', parseInt(payload.skeleton_id))\r\n                form_data.append('category', parseInt(payload.category))\r\n                form_data.append('name', payload.name)\r\n                form_data.append('description', payload.description)\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/admin_kit_builder/update.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('akb_update_kit', resp_data.data)\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        akb_drop_all_data({ commit }) {\r\n            commit('akb_drop_all_data')\r\n        },\r\n        async akb_load_kit_relation({ commit }, payload) { // payload (int) [skeleton_id]\r\n            try {\r\n                let data = {\r\n                    skeleton_data: [],\r\n                    skeleton_points_data: [],\r\n                    products_data: [],\r\n                    products_points_data: [],\r\n                    classes_list: [],\r\n                    skeleton_points_classes_list: [],\r\n                    products_points_classes_list: [],\r\n                    duplicate_list_classes_skeleton_and_products: [],\r\n                    merge_classes_skeleton_and_products: []\r\n                }\r\n\r\n                // получаем данные скелетона по id\r\n                let form_data_skeleton = new FormData()\r\n                form_data_skeleton.append('id', parseInt(payload))\r\n                let response_skeleton_by_id = await Axios.post(\r\n                    \"http://ivan-tactical.conf/skeleton/get_by_id.php\",\r\n                    form_data_skeleton\r\n                )\r\n                data.skeleton_data = response_skeleton_by_id.data.data[0]\r\n\r\n                // получаем точки выбраного скелетона\r\n                let form_data_skeleton_points = new FormData()\r\n                form_data_skeleton_points.append('id', parseInt(payload))\r\n                let response_skeleton_points_by_id = await Axios.post(\r\n                    \"http://ivan-tactical.conf/skeletons_points/get.php\",\r\n                    form_data_skeleton_points\r\n                )\r\n                data.skeleton_points_data = response_skeleton_points_by_id.data.data\r\n\r\n                // получаем данные всех продуктов (обвесы первого типа)\r\n                let response_all_products = await Axios.post(\r\n                    \"http://ivan-tactical.conf/product/get_all.php\"\r\n                );\r\n\r\n                data.products_data = response_all_products.data.data\r\n\r\n                // Полчучаем список id продуктов\r\n                let list_products_id = []\r\n                for (let i = 0; i < data.products_data.length; i++) {\r\n                    list_products_id.push(parseInt(data.products_data[i].id))\r\n                }\r\n                // Получаем данные точек продуктов выше передавая список id продуктов\r\n                let products_points_data_form_data = new FormData()\r\n                products_points_data_form_data.append('ids', JSON.stringify(list_products_id))\r\n                let products_points_data = await Axios.post(\r\n                    'http://ivan-tactical.conf/products_points/get_by_list_ids.php',\r\n                    products_points_data_form_data\r\n                )\r\n                data.products_points_data = products_points_data.data.data\r\n\r\n                // получаем список классов\r\n                const classes_list = await Axios.post(\"http://ivan-tactical.conf/classes/get_all.php\")\r\n                const resp_classes_list = classes_list.data.data\r\n                data.classes_list = resp_classes_list\r\n\r\n                // создаем список классов скелета\r\n                let skeleton_points_classes_list = []\r\n                for (let i = 0; i < data.skeleton_points_data.length; i++) {\r\n                    for (let j = 0; j < data.classes_list.length; j++) {\r\n                        if (\r\n                            data.skeleton_points_data[i].class.includes(data.classes_list[j].id) &&\r\n                            data.skeleton_points_data[i].type === 'Plus'\r\n                        ) {\r\n                            skeleton_points_classes_list.push(data.classes_list[j])\r\n                        }\r\n                    }\r\n                }\r\n                data.skeleton_points_classes_list = Array.from(new Set(skeleton_points_classes_list))\r\n\r\n                //  создаем список классов продуктов\r\n                let products_points_classes_list = []\r\n                for (let i = 0; i < data.products_points_data.length; i++) {\r\n                    for (let j = 0; j < data.classes_list.length; j++) {\r\n                        if (\r\n                            data.products_points_data[i].class.includes(data.classes_list[j].id) &&\r\n                            data.products_points_data[i].type === 'Plus'\r\n                        ) {\r\n                            products_points_classes_list.push(data.classes_list[j])\r\n                        }\r\n                    }\r\n                }\r\n                data.products_points_classes_list = Array.from(new Set(products_points_classes_list))\r\n\r\n                // создаем список дубликаций классов на скелете и продуктах\r\n                let duplicate_list_classes_skeleton_and_products = []\r\n                for (let i = 0; i < data.skeleton_points_classes_list.length; i++) {\r\n                    for (let j = 0; j < data.products_points_classes_list.length; j++) {\r\n                        if (parseInt(data.skeleton_points_classes_list[i].id) === parseInt(data.products_points_classes_list[j].id)) {\r\n                            duplicate_list_classes_skeleton_and_products.push(data.skeleton_points_classes_list[i].id)\r\n                        }\r\n                    }\r\n                }\r\n                data.duplicate_list_classes_skeleton_and_products = Array.from(new Set(duplicate_list_classes_skeleton_and_products))\r\n\r\n                // список класоов без повторов\r\n                data.merge_classes_skeleton_and_products = Array.from(new Set(data.skeleton_points_classes_list.concat(data.products_points_classes_list)))\r\n\r\n\r\n                console.log(payload, data)\r\n                commit('akb_load_kit_relation', data)\r\n                commit('akb_load_kit_relation_all_loaded')\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        },\r\n        async akb_load_kit_products({ commit }, payload) { // payload (int) [kit_id]\r\n            try {\r\n                let form_data = new FormData();\r\n                form_data.append('id', parseInt(payload))\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/admin_kit_builder/get_attach_by_kit_id.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n\r\n                for (let i = 0; i < resp_data.data.length; i++) {\r\n                    if (parseInt(resp_data.data[i].parent_product_point_id) === 0) {\r\n                        delete resp_data.data[i].parent_product_point_id\r\n                    }\r\n                    if (parseInt(resp_data.data[i].parent_skeleton_point_id) === 0) {\r\n                        delete resp_data.data[i].parent_skeleton_point_id\r\n                    }\r\n                }\r\n\r\n                commit('akb_load_kit_products', resp_data.data)\r\n                commit('akb_load_kit_products_loaded')\r\n            } catch (e) {\r\n                console.error(e)\r\n            }\r\n        },\r\n        async akb_save_kit_products({ commit }, payload) {\r\n            try {\r\n                commit('akb_save_kit_products', false)\r\n                let form_data = new FormData()\r\n                form_data.append('attachments', JSON.stringify(payload))\r\n                let response = await Axios.post(\r\n                    \"http://ivan-tactical.conf/admin_kit_builder/save_attach.php\",\r\n                    form_data\r\n                )\r\n                let resp_data = response.data\r\n                Vue.notify({\r\n                    group: 'foo',\r\n                    text: resp_data.message,\r\n                    type: resp_data.status\r\n                })\r\n                commit('akb_save_kit_products', true)\r\n            } catch (e) {\r\n                commit('akb_save_kit_products', false)\r\n                console.error(e)\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        akb_all_kits(state) {\r\n            return state.akb_all_kits\r\n        },\r\n        akb_load_kit_by_id(state) {\r\n            return state.akb_load_kit_by_id\r\n        },\r\n        akb_create_kit(state) {\r\n            return state.akb_create_kit\r\n        },\r\n        akb_load_kit_relation(state) {\r\n            return state.akb_load_kit_relation\r\n        },\r\n        akb_load_kit_relation_all_loaded(state) {\r\n            return state.akb_load_kit_relation_all_loaded\r\n        },\r\n        akb_load_kit_products(state) {\r\n            return state.akb_load_kit_products\r\n        },\r\n        akb_load_kit_products_loaded(state) {\r\n            return state.akb_load_kit_products_loaded\r\n        }\r\n    },\r\n}","import Vue from 'vue'\nimport Vuex from 'vuex'\n// \nimport common from \"./common\";\nimport classesOfAncherpoint from \"./Datas/classes\";\nimport categoryes from \"./Datas/categoryes\";\nimport skeletonBuilder from \"./SkeletonBuilder/index-new\";\nimport baseBuilder from \"./BaseBuilder/index-new\";\nimport partBuilder from \"./PartBuilder/index-new\";\nimport productBuilder from \"./ProductBuilder/index-new\";\nimport point from \"./PointConfigurator/index-new\";\nimport adminKitBuilder from \"./AdminKitBuilder/index\";\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n    modules: {\n        common,\n        skeletonBuilder,\n        classesOfAncherpoint,\n        categoryes,\n        point,\n        baseBuilder,\n        partBuilder,\n        productBuilder,\n        adminKitBuilder,\n    }\n})","import Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\n\nVue.use(Vuetify);\n\nexport default new Vuetify({\n});\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport Vuetify from 'vuetify'\r\nimport 'vuetify/dist/vuetify'\r\nimport vuetify from './plugins/vuetify';\r\nimport axios from 'axios';\r\nimport Vuelidate from 'vuelidate'\r\nimport Notifications from 'vue-notification'\r\n\r\nVue.use(Vuetify)\r\nVue.use(Vuelidate)\r\nVue.use(Notifications)\r\n    // Vue.use(axios)\r\nVue.prototype.$http = axios\r\n\r\nVue.use(router)\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n    router,\r\n    store,\r\n    vuetify,\r\n    render: h => h(App)\r\n}).$mount('#app')","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-content',[_c('v-container',[_c('router-view')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-content>\r\n    <v-container>\r\n      <router-view></router-view>\r\n    </v-container>\r\n  </v-content>\r\n</template>\r\n<script>\r\nexport default {\r\n  components: {}\r\n};\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProductBuilder.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProductBuilder.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ProductBuilder.vue?vue&type=template&id=d2d369c0&\"\nimport script from \"./ProductBuilder.vue?vue&type=script&lang=js&\"\nexport * from \"./ProductBuilder.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VContent } from 'vuetify/lib/components/VContent';\ninstallComponents(component, {VContainer,VContent})\n"],"sourceRoot":""}